name: Publish to NPM

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      new-version: ${{ steps.check.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if version changed
        id: check
        run: |
          if git diff HEAD~1 HEAD --name-only | grep -q "package.json"; then
            OLD_VERSION=$(git show HEAD~1:package.json | jq -r '.version')
            NEW_VERSION=$(jq -r '.version' package.json)
            if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
              echo "changed=true" >> $GITHUB_OUTPUT
              echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
              echo "Version changed from $OLD_VERSION to $NEW_VERSION"
            else
              echo "changed=false" >> $GITHUB_OUTPUT
              echo "Version not changed"
            fi
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "package.json not modified"
          fi

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Check build output
        run: |
          ls -la dist/
          echo "Build completed successfully"

  publish:
    needs: [check-version, build-and-test]
    runs-on: ubuntu-latest
    if: needs.check-version.outputs.version-changed == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ needs.check-version.outputs.new-version }}" \
            --title "Release v${{ needs.check-version.outputs.new-version }}" \
            --notes "ðŸŽ‰ New version ${{ needs.check-version.outputs.new-version }} published to NPM!

          ## Changes
          See [CHANGELOG.md](./CHANGELOG.md) for details.

          ## Installation
          \`\`\`bash
          npm install @metis-w/design-system@${{ needs.check-version.outputs.new-version }}
          \`\`\`"
